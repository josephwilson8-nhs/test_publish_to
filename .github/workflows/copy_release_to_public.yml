name: "Copy Release to Public RAP CoP Repo"
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  push-release:
    runs-on: "ubuntu-latest"
    if: github.repository == 'josephwilson8-nhs/test_publish_from'
    steps:
      - name: Checkout private
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.EXTERNAL_REPO_TOKEN }}
          path: private

      - name: Checkout public
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.EXTERNAL_REPO_TOKEN }}
          repository: josephwilson8-nhs/test_publish_to
          path: public

      - name: Read the release name and save to env
        run: |
          cd private
          echo RELEASE_NAME=$(gh release view --json name | jq -r '.name') >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.EXTERNAL_REPO_TOKEN }}

      - name: Create a RELEASE_BRANCH name and save to env
        run: echo RELEASE_BRANCH=release/${{ env.RELEASE_NAME }} >> $GITHUB_ENV

      # - name: Create release branch and push changes to private
      #   run: |
      #     cd private
      #     git branch ${{ env.RELEASE_BRANCH }}
      #     git push -u origin ${{ env.RELEASE_BRANCH }}

      - name: Delete .git folder from private
        run: |
          cd private
          rm -rf .git

      - name: Delete contents of public (apart from .git folder)
        run: |
          cd public
          find . -maxdepth 1 \( ! -name . -a ! -name .git \) -exec rm -fr {} +

      - name: Copy contents of private to public
        run: |
          cp -r private/. public/

      - name: Create release branch, commit changes to it, and push to public
        run: |
          cd public
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git checkout -b ${{ env.RELEASE_BRANCH }}
          git add .
          git commit -m "Release ${{ env.RELEASE_NAME }}"
          git push -u origin ${{ env.RELEASE_BRANCH }}

      # - run: ls -la
